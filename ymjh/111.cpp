


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 头文件
#include <Windows.h>
#include "hook_ymjh.h"
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
#pragma comment(linker, "/EXPORT:AddIPAddress=_AheadLib_AddIPAddress,@1")
#pragma comment(linker, "/EXPORT:AllocateAndGetInterfaceInfoFromStack=_AheadLib_AllocateAndGetInterfaceInfoFromStack,@2")
#pragma comment(linker, "/EXPORT:AllocateAndGetIpAddrTableFromStack=_AheadLib_AllocateAndGetIpAddrTableFromStack,@3")
#pragma comment(linker, "/EXPORT:CancelIPChangeNotify=_AheadLib_CancelIPChangeNotify,@4")
#pragma comment(linker, "/EXPORT:CancelIfTimestampConfigChange=_AheadLib_CancelIfTimestampConfigChange,@5")
#pragma comment(linker, "/EXPORT:CancelMibChangeNotify2=_AheadLib_CancelMibChangeNotify2,@6")
#pragma comment(linker, "/EXPORT:CaptureInterfaceHardwareCrossTimestamp=_AheadLib_CaptureInterfaceHardwareCrossTimestamp,@7")
#pragma comment(linker, "/EXPORT:CloseCompartment=_AheadLib_CloseCompartment,@8")
#pragma comment(linker, "/EXPORT:CloseGetIPPhysicalInterfaceForDestination=_AheadLib_CloseGetIPPhysicalInterfaceForDestination,@9")
#pragma comment(linker, "/EXPORT:ConvertCompartmentGuidToId=_AheadLib_ConvertCompartmentGuidToId,@10")
#pragma comment(linker, "/EXPORT:ConvertCompartmentIdToGuid=_AheadLib_ConvertCompartmentIdToGuid,@11")
#pragma comment(linker, "/EXPORT:ConvertGuidToStringA=_AheadLib_ConvertGuidToStringA,@12")
#pragma comment(linker, "/EXPORT:ConvertGuidToStringW=_AheadLib_ConvertGuidToStringW,@13")
#pragma comment(linker, "/EXPORT:ConvertInterfaceAliasToLuid=_AheadLib_ConvertInterfaceAliasToLuid,@14")
#pragma comment(linker, "/EXPORT:ConvertInterfaceGuidToLuid=_AheadLib_ConvertInterfaceGuidToLuid,@15")
#pragma comment(linker, "/EXPORT:ConvertInterfaceIndexToLuid=_AheadLib_ConvertInterfaceIndexToLuid,@16")
#pragma comment(linker, "/EXPORT:ConvertInterfaceLuidToAlias=_AheadLib_ConvertInterfaceLuidToAlias,@17")
#pragma comment(linker, "/EXPORT:ConvertInterfaceLuidToGuid=_AheadLib_ConvertInterfaceLuidToGuid,@18")
#pragma comment(linker, "/EXPORT:ConvertInterfaceLuidToIndex=_AheadLib_ConvertInterfaceLuidToIndex,@19")
#pragma comment(linker, "/EXPORT:ConvertInterfaceLuidToNameA=_AheadLib_ConvertInterfaceLuidToNameA,@20")
#pragma comment(linker, "/EXPORT:ConvertInterfaceLuidToNameW=_AheadLib_ConvertInterfaceLuidToNameW,@21")
#pragma comment(linker, "/EXPORT:ConvertInterfaceNameToLuidA=_AheadLib_ConvertInterfaceNameToLuidA,@22")
#pragma comment(linker, "/EXPORT:ConvertInterfaceNameToLuidW=_AheadLib_ConvertInterfaceNameToLuidW,@23")
#pragma comment(linker, "/EXPORT:ConvertInterfacePhysicalAddressToLuid=_AheadLib_ConvertInterfacePhysicalAddressToLuid,@24")
#pragma comment(linker, "/EXPORT:ConvertIpv4MaskToLength=_AheadLib_ConvertIpv4MaskToLength,@25")
#pragma comment(linker, "/EXPORT:ConvertLengthToIpv4Mask=_AheadLib_ConvertLengthToIpv4Mask,@26")
#pragma comment(linker, "/EXPORT:ConvertRemoteInterfaceAliasToLuid=_AheadLib_ConvertRemoteInterfaceAliasToLuid,@27")
#pragma comment(linker, "/EXPORT:ConvertRemoteInterfaceGuidToLuid=_AheadLib_ConvertRemoteInterfaceGuidToLuid,@28")
#pragma comment(linker, "/EXPORT:ConvertRemoteInterfaceIndexToLuid=_AheadLib_ConvertRemoteInterfaceIndexToLuid,@29")
#pragma comment(linker, "/EXPORT:ConvertRemoteInterfaceLuidToAlias=_AheadLib_ConvertRemoteInterfaceLuidToAlias,@30")
#pragma comment(linker, "/EXPORT:ConvertRemoteInterfaceLuidToGuid=_AheadLib_ConvertRemoteInterfaceLuidToGuid,@31")
#pragma comment(linker, "/EXPORT:ConvertRemoteInterfaceLuidToIndex=_AheadLib_ConvertRemoteInterfaceLuidToIndex,@32")
#pragma comment(linker, "/EXPORT:ConvertStringToGuidA=_AheadLib_ConvertStringToGuidA,@33")
#pragma comment(linker, "/EXPORT:ConvertStringToGuidW=_AheadLib_ConvertStringToGuidW,@34")
#pragma comment(linker, "/EXPORT:ConvertStringToInterfacePhysicalAddress=_AheadLib_ConvertStringToInterfacePhysicalAddress,@35")
#pragma comment(linker, "/EXPORT:CreateAnycastIpAddressEntry=_AheadLib_CreateAnycastIpAddressEntry,@36")
#pragma comment(linker, "/EXPORT:CreateCompartment=_AheadLib_CreateCompartment,@37")
#pragma comment(linker, "/EXPORT:CreateIpForwardEntry2=_AheadLib_CreateIpForwardEntry2,@38")
#pragma comment(linker, "/EXPORT:CreateIpForwardEntry=_AheadLib_CreateIpForwardEntry,@39")
#pragma comment(linker, "/EXPORT:CreateIpNetEntry2=_AheadLib_CreateIpNetEntry2,@40")
#pragma comment(linker, "/EXPORT:CreateIpNetEntry=_AheadLib_CreateIpNetEntry,@41")
#pragma comment(linker, "/EXPORT:CreatePersistentTcpPortReservation=_AheadLib_CreatePersistentTcpPortReservation,@42")
#pragma comment(linker, "/EXPORT:CreatePersistentUdpPortReservation=_AheadLib_CreatePersistentUdpPortReservation,@43")
#pragma comment(linker, "/EXPORT:CreateProxyArpEntry=_AheadLib_CreateProxyArpEntry,@44")
#pragma comment(linker, "/EXPORT:CreateSortedAddressPairs=_AheadLib_CreateSortedAddressPairs,@45")
#pragma comment(linker, "/EXPORT:CreateUnicastIpAddressEntry=_AheadLib_CreateUnicastIpAddressEntry,@46")
#pragma comment(linker, "/EXPORT:DeleteAnycastIpAddressEntry=_AheadLib_DeleteAnycastIpAddressEntry,@47")
#pragma comment(linker, "/EXPORT:DeleteCompartment=_AheadLib_DeleteCompartment,@48")
#pragma comment(linker, "/EXPORT:DeleteIPAddress=_AheadLib_DeleteIPAddress,@49")
#pragma comment(linker, "/EXPORT:DeleteIpForwardEntry2=_AheadLib_DeleteIpForwardEntry2,@50")
#pragma comment(linker, "/EXPORT:DeleteIpForwardEntry=_AheadLib_DeleteIpForwardEntry,@51")
#pragma comment(linker, "/EXPORT:DeleteIpNetEntry2=_AheadLib_DeleteIpNetEntry2,@52")
#pragma comment(linker, "/EXPORT:DeleteIpNetEntry=_AheadLib_DeleteIpNetEntry,@53")
#pragma comment(linker, "/EXPORT:DeletePersistentTcpPortReservation=_AheadLib_DeletePersistentTcpPortReservation,@54")
#pragma comment(linker, "/EXPORT:DeletePersistentUdpPortReservation=_AheadLib_DeletePersistentUdpPortReservation,@55")
#pragma comment(linker, "/EXPORT:DeleteProxyArpEntry=_AheadLib_DeleteProxyArpEntry,@56")
#pragma comment(linker, "/EXPORT:DeleteUnicastIpAddressEntry=_AheadLib_DeleteUnicastIpAddressEntry,@57")
#pragma comment(linker, "/EXPORT:DisableMediaSense=_AheadLib_DisableMediaSense,@58")
#pragma comment(linker, "/EXPORT:EnableRouter=_AheadLib_EnableRouter,@59")
#pragma comment(linker, "/EXPORT:FlushIpNetTable2=_AheadLib_FlushIpNetTable2,@60")
#pragma comment(linker, "/EXPORT:FlushIpNetTable=_AheadLib_FlushIpNetTable,@61")
#pragma comment(linker, "/EXPORT:FlushIpPathTable=_AheadLib_FlushIpPathTable,@62")
#pragma comment(linker, "/EXPORT:FreeDnsSettings=_AheadLib_FreeDnsSettings,@63")
#pragma comment(linker, "/EXPORT:FreeInterfaceDnsSettings=_AheadLib_FreeInterfaceDnsSettings,@64")
#pragma comment(linker, "/EXPORT:FreeMibTable=_AheadLib_FreeMibTable,@65")
#pragma comment(linker, "/EXPORT:GetAdapterIndex=_AheadLib_GetAdapterIndex,@66")
#pragma comment(linker, "/EXPORT:GetAdapterOrderMap=_AheadLib_GetAdapterOrderMap,@67")
#pragma comment(linker, "/EXPORT:GetAdaptersAddresses=_AheadLib_GetAdaptersAddresses,@68")
#pragma comment(linker, "/EXPORT:GetAdaptersInfo=_AheadLib_GetAdaptersInfo,@69")
#pragma comment(linker, "/EXPORT:GetAnycastIpAddressEntry=_AheadLib_GetAnycastIpAddressEntry,@70")
#pragma comment(linker, "/EXPORT:GetAnycastIpAddressTable=_AheadLib_GetAnycastIpAddressTable,@71")
#pragma comment(linker, "/EXPORT:GetBestInterface=_AheadLib_GetBestInterface,@72")
#pragma comment(linker, "/EXPORT:GetBestInterfaceEx=_AheadLib_GetBestInterfaceEx,@73")
#pragma comment(linker, "/EXPORT:GetBestRoute2=_AheadLib_GetBestRoute2,@74")
#pragma comment(linker, "/EXPORT:GetBestRoute=_AheadLib_GetBestRoute,@75")
#pragma comment(linker, "/EXPORT:GetCurrentThreadCompartmentId=_AheadLib_GetCurrentThreadCompartmentId,@76")
#pragma comment(linker, "/EXPORT:GetCurrentThreadCompartmentScope=_AheadLib_GetCurrentThreadCompartmentScope,@77")
#pragma comment(linker, "/EXPORT:GetDefaultCompartmentId=_AheadLib_GetDefaultCompartmentId,@78")
#pragma comment(linker, "/EXPORT:GetDnsSettings=_AheadLib_GetDnsSettings,@79")
#pragma comment(linker, "/EXPORT:GetExtendedTcpTable=_AheadLib_GetExtendedTcpTable,@80")
#pragma comment(linker, "/EXPORT:GetExtendedUdpTable=_AheadLib_GetExtendedUdpTable,@81")
#pragma comment(linker, "/EXPORT:GetFriendlyIfIndex=_AheadLib_GetFriendlyIfIndex,@82")
#pragma comment(linker, "/EXPORT:GetIcmpStatistics=_AheadLib_GetIcmpStatistics,@83")
#pragma comment(linker, "/EXPORT:GetIcmpStatisticsEx=_AheadLib_GetIcmpStatisticsEx,@84")
#pragma comment(linker, "/EXPORT:GetIfEntry2=_AheadLib_GetIfEntry2,@85")
#pragma comment(linker, "/EXPORT:GetIfEntry2Ex=_AheadLib_GetIfEntry2Ex,@86")
#pragma comment(linker, "/EXPORT:GetIfEntry=_AheadLib_GetIfEntry,@87")
#pragma comment(linker, "/EXPORT:GetIfStackTable=_AheadLib_GetIfStackTable,@88")
#pragma comment(linker, "/EXPORT:GetIfTable2=_AheadLib_GetIfTable2,@89")
#pragma comment(linker, "/EXPORT:GetIfTable2Ex=_AheadLib_GetIfTable2Ex,@90")
#pragma comment(linker, "/EXPORT:GetIfTable=_AheadLib_GetIfTable,@91")
#pragma comment(linker, "/EXPORT:GetInterfaceCompartmentId=_AheadLib_GetInterfaceCompartmentId,@92")
#pragma comment(linker, "/EXPORT:GetInterfaceCurrentTimestampCapabilities=_AheadLib_GetInterfaceCurrentTimestampCapabilities,@93")
#pragma comment(linker, "/EXPORT:GetInterfaceDnsSettings=_AheadLib_GetInterfaceDnsSettings,@94")
#pragma comment(linker, "/EXPORT:GetInterfaceHardwareTimestampCapabilities=_AheadLib_GetInterfaceHardwareTimestampCapabilities,@95")
#pragma comment(linker, "/EXPORT:GetInterfaceInfo=_AheadLib_GetInterfaceInfo,@96")
#pragma comment(linker, "/EXPORT:GetInvertedIfStackTable=_AheadLib_GetInvertedIfStackTable,@97")
#pragma comment(linker, "/EXPORT:GetIpAddrTable=_AheadLib_GetIpAddrTable,@98")
#pragma comment(linker, "/EXPORT:GetIpErrorString=_AheadLib_GetIpErrorString,@99")
#pragma comment(linker, "/EXPORT:GetIpForwardEntry2=_AheadLib_GetIpForwardEntry2,@100")
#pragma comment(linker, "/EXPORT:GetIpForwardTable2=_AheadLib_GetIpForwardTable2,@101")
#pragma comment(linker, "/EXPORT:GetIpForwardTable=_AheadLib_GetIpForwardTable,@102")
#pragma comment(linker, "/EXPORT:GetIpInterfaceEntry=_AheadLib_GetIpInterfaceEntry,@103")
#pragma comment(linker, "/EXPORT:GetIpInterfaceTable=_AheadLib_GetIpInterfaceTable,@104")
#pragma comment(linker, "/EXPORT:GetIpNetEntry2=_AheadLib_GetIpNetEntry2,@105")
#pragma comment(linker, "/EXPORT:GetIpNetTable2=_AheadLib_GetIpNetTable2,@106")
#pragma comment(linker, "/EXPORT:GetIpNetTable=_AheadLib_GetIpNetTable,@107")
#pragma comment(linker, "/EXPORT:GetIpNetworkConnectionBandwidthEstimates=_AheadLib_GetIpNetworkConnectionBandwidthEstimates,@108")
#pragma comment(linker, "/EXPORT:GetIpPathEntry=_AheadLib_GetIpPathEntry,@109")
#pragma comment(linker, "/EXPORT:GetIpPathTable=_AheadLib_GetIpPathTable,@110")
#pragma comment(linker, "/EXPORT:GetIpStatistics=_AheadLib_GetIpStatistics,@111")
#pragma comment(linker, "/EXPORT:GetIpStatisticsEx=_AheadLib_GetIpStatisticsEx,@112")
#pragma comment(linker, "/EXPORT:GetJobCompartmentId=_AheadLib_GetJobCompartmentId,@113")
#pragma comment(linker, "/EXPORT:GetMulticastIpAddressEntry=_AheadLib_GetMulticastIpAddressEntry,@114")
#pragma comment(linker, "/EXPORT:GetMulticastIpAddressTable=_AheadLib_GetMulticastIpAddressTable,@115")
#pragma comment(linker, "/EXPORT:GetNetworkInformation=_AheadLib_GetNetworkInformation,@116")
#pragma comment(linker, "/EXPORT:GetNetworkParams=_AheadLib_GetNetworkParams,@117")
#pragma comment(linker, "/EXPORT:GetNumberOfInterfaces=_AheadLib_GetNumberOfInterfaces,@118")
#pragma comment(linker, "/EXPORT:GetOwnerModuleFromPidAndInfo=_AheadLib_GetOwnerModuleFromPidAndInfo,@119")
#pragma comment(linker, "/EXPORT:GetOwnerModuleFromTcp6Entry=_AheadLib_GetOwnerModuleFromTcp6Entry,@120")
#pragma comment(linker, "/EXPORT:GetOwnerModuleFromTcpEntry=_AheadLib_GetOwnerModuleFromTcpEntry,@121")
#pragma comment(linker, "/EXPORT:GetOwnerModuleFromUdp6Entry=_AheadLib_GetOwnerModuleFromUdp6Entry,@122")
#pragma comment(linker, "/EXPORT:GetOwnerModuleFromUdpEntry=_AheadLib_GetOwnerModuleFromUdpEntry,@123")
#pragma comment(linker, "/EXPORT:GetPerAdapterInfo=_AheadLib_GetPerAdapterInfo,@124")
#pragma comment(linker, "/EXPORT:GetPerTcp6ConnectionEStats=_AheadLib_GetPerTcp6ConnectionEStats,@125")
#pragma comment(linker, "/EXPORT:GetPerTcp6ConnectionStats=_AheadLib_GetPerTcp6ConnectionStats,@126")
#pragma comment(linker, "/EXPORT:GetPerTcpConnectionEStats=_AheadLib_GetPerTcpConnectionEStats,@127")
#pragma comment(linker, "/EXPORT:GetPerTcpConnectionStats=_AheadLib_GetPerTcpConnectionStats,@128")
#pragma comment(linker, "/EXPORT:GetRTTAndHopCount=_AheadLib_GetRTTAndHopCount,@129")
#pragma comment(linker, "/EXPORT:GetSessionCompartmentId=_AheadLib_GetSessionCompartmentId,@130")
#pragma comment(linker, "/EXPORT:GetTcp6Table2=_AheadLib_GetTcp6Table2,@131")
#pragma comment(linker, "/EXPORT:GetTcp6Table=_AheadLib_GetTcp6Table,@132")
#pragma comment(linker, "/EXPORT:GetTcpStatistics=_AheadLib_GetTcpStatistics,@133")
#pragma comment(linker, "/EXPORT:GetTcpStatisticsEx2=_AheadLib_GetTcpStatisticsEx2,@134")
#pragma comment(linker, "/EXPORT:GetTcpStatisticsEx=_AheadLib_GetTcpStatisticsEx,@135")
#pragma comment(linker, "/EXPORT:GetTcpTable2=_AheadLib_GetTcpTable2,@136")
#pragma comment(linker, "/EXPORT:GetTcpTable=_AheadLib_GetTcpTable,@137")
#pragma comment(linker, "/EXPORT:GetTeredoPort=_AheadLib_GetTeredoPort,@138")
#pragma comment(linker, "/EXPORT:GetUdp6Table=_AheadLib_GetUdp6Table,@139")
#pragma comment(linker, "/EXPORT:GetUdpStatistics=_AheadLib_GetUdpStatistics,@140")
#pragma comment(linker, "/EXPORT:GetUdpStatisticsEx2=_AheadLib_GetUdpStatisticsEx2,@141")
#pragma comment(linker, "/EXPORT:GetUdpStatisticsEx=_AheadLib_GetUdpStatisticsEx,@142")
#pragma comment(linker, "/EXPORT:GetUdpTable=_AheadLib_GetUdpTable,@143")
#pragma comment(linker, "/EXPORT:GetUniDirectionalAdapterInfo=_AheadLib_GetUniDirectionalAdapterInfo,@144")
#pragma comment(linker, "/EXPORT:GetUnicastIpAddressEntry=_AheadLib_GetUnicastIpAddressEntry,@145")
#pragma comment(linker, "/EXPORT:GetUnicastIpAddressTable=_AheadLib_GetUnicastIpAddressTable,@146")
#pragma comment(linker, "/EXPORT:GetWPAOACSupportLevel=_AheadLib_GetWPAOACSupportLevel,@147")
#pragma comment(linker, "/EXPORT:Icmp6CreateFile=_AheadLib_Icmp6CreateFile,@148")
#pragma comment(linker, "/EXPORT:Icmp6ParseReplies=_AheadLib_Icmp6ParseReplies,@149")
#pragma comment(linker, "/EXPORT:Icmp6SendEcho2=_AheadLib_Icmp6SendEcho2,@150")
#pragma comment(linker, "/EXPORT:IcmpCloseHandle=_AheadLib_IcmpCloseHandle,@151")
#pragma comment(linker, "/EXPORT:IcmpCreateFile=_AheadLib_IcmpCreateFile,@152")
#pragma comment(linker, "/EXPORT:IcmpParseReplies=_AheadLib_IcmpParseReplies,@153")
#pragma comment(linker, "/EXPORT:IcmpSendEcho2=_AheadLib_IcmpSendEcho2,@154")
#pragma comment(linker, "/EXPORT:IcmpSendEcho2Ex=_AheadLib_IcmpSendEcho2Ex,@155")
#pragma comment(linker, "/EXPORT:IcmpSendEcho=_AheadLib_IcmpSendEcho,@156")
#pragma comment(linker, "/EXPORT:InitializeCompartmentEntry=_AheadLib_InitializeCompartmentEntry,@157")
#pragma comment(linker, "/EXPORT:InitializeIpForwardEntry=_AheadLib_InitializeIpForwardEntry,@158")
#pragma comment(linker, "/EXPORT:InitializeIpInterfaceEntry=_AheadLib_InitializeIpInterfaceEntry,@159")
#pragma comment(linker, "/EXPORT:InitializeUnicastIpAddressEntry=_AheadLib_InitializeUnicastIpAddressEntry,@160")
#pragma comment(linker, "/EXPORT:InternalCleanupPersistentStore=_AheadLib_InternalCleanupPersistentStore,@161")
#pragma comment(linker, "/EXPORT:InternalCreateAnycastIpAddressEntry=_AheadLib_InternalCreateAnycastIpAddressEntry,@162")
#pragma comment(linker, "/EXPORT:InternalCreateIpForwardEntry2=_AheadLib_InternalCreateIpForwardEntry2,@163")
#pragma comment(linker, "/EXPORT:InternalCreateIpForwardEntry=_AheadLib_InternalCreateIpForwardEntry,@164")
#pragma comment(linker, "/EXPORT:InternalCreateIpNetEntry2=_AheadLib_InternalCreateIpNetEntry2,@165")
#pragma comment(linker, "/EXPORT:InternalCreateIpNetEntry=_AheadLib_InternalCreateIpNetEntry,@166")
#pragma comment(linker, "/EXPORT:InternalCreateUnicastIpAddressEntry=_AheadLib_InternalCreateUnicastIpAddressEntry,@167")
#pragma comment(linker, "/EXPORT:InternalDeleteAnycastIpAddressEntry=_AheadLib_InternalDeleteAnycastIpAddressEntry,@168")
#pragma comment(linker, "/EXPORT:InternalDeleteIpForwardEntry2=_AheadLib_InternalDeleteIpForwardEntry2,@169")
#pragma comment(linker, "/EXPORT:InternalDeleteIpForwardEntry=_AheadLib_InternalDeleteIpForwardEntry,@170")
#pragma comment(linker, "/EXPORT:InternalDeleteIpNetEntry2=_AheadLib_InternalDeleteIpNetEntry2,@171")
#pragma comment(linker, "/EXPORT:InternalDeleteIpNetEntry=_AheadLib_InternalDeleteIpNetEntry,@172")
#pragma comment(linker, "/EXPORT:InternalDeleteUnicastIpAddressEntry=_AheadLib_InternalDeleteUnicastIpAddressEntry,@173")
#pragma comment(linker, "/EXPORT:InternalFindInterfaceByAddress=_AheadLib_InternalFindInterfaceByAddress,@174")
#pragma comment(linker, "/EXPORT:InternalGetAnycastIpAddressEntry=_AheadLib_InternalGetAnycastIpAddressEntry,@175")
#pragma comment(linker, "/EXPORT:InternalGetAnycastIpAddressTable=_AheadLib_InternalGetAnycastIpAddressTable,@176")
#pragma comment(linker, "/EXPORT:InternalGetBoundTcp6EndpointTable=_AheadLib_InternalGetBoundTcp6EndpointTable,@177")
#pragma comment(linker, "/EXPORT:InternalGetBoundTcpEndpointTable=_AheadLib_InternalGetBoundTcpEndpointTable,@178")
#pragma comment(linker, "/EXPORT:InternalGetForwardIpTable2=_AheadLib_InternalGetForwardIpTable2,@179")
#pragma comment(linker, "/EXPORT:InternalGetIPPhysicalInterfaceForDestination=_AheadLib_InternalGetIPPhysicalInterfaceForDestination,@180")
#pragma comment(linker, "/EXPORT:InternalGetIfEntry2=_AheadLib_InternalGetIfEntry2,@181")
#pragma comment(linker, "/EXPORT:InternalGetIfTable2=_AheadLib_InternalGetIfTable2,@182")
#pragma comment(linker, "/EXPORT:InternalGetIfTable=_AheadLib_InternalGetIfTable,@183")
#pragma comment(linker, "/EXPORT:InternalGetIpAddrTable=_AheadLib_InternalGetIpAddrTable,@184")
#pragma comment(linker, "/EXPORT:InternalGetIpForwardEntry2=_AheadLib_InternalGetIpForwardEntry2,@185")
#pragma comment(linker, "/EXPORT:InternalGetIpForwardTable=_AheadLib_InternalGetIpForwardTable,@186")
#pragma comment(linker, "/EXPORT:InternalGetIpInterfaceEntry=_AheadLib_InternalGetIpInterfaceEntry,@187")
#pragma comment(linker, "/EXPORT:InternalGetIpInterfaceTable=_AheadLib_InternalGetIpInterfaceTable,@188")
#pragma comment(linker, "/EXPORT:InternalGetIpNetEntry2=_AheadLib_InternalGetIpNetEntry2,@189")
#pragma comment(linker, "/EXPORT:InternalGetIpNetTable2=_AheadLib_InternalGetIpNetTable2,@190")
#pragma comment(linker, "/EXPORT:InternalGetIpNetTable=_AheadLib_InternalGetIpNetTable,@191")
#pragma comment(linker, "/EXPORT:InternalGetMulticastIpAddressEntry=_AheadLib_InternalGetMulticastIpAddressEntry,@192")
#pragma comment(linker, "/EXPORT:InternalGetMulticastIpAddressTable=_AheadLib_InternalGetMulticastIpAddressTable,@193")
#pragma comment(linker, "/EXPORT:InternalGetRtcSlotInformation=_AheadLib_InternalGetRtcSlotInformation,@194")
#pragma comment(linker, "/EXPORT:InternalGetTcp6Table2=_AheadLib_InternalGetTcp6Table2,@195")
#pragma comment(linker, "/EXPORT:InternalGetTcp6TableWithOwnerModule=_AheadLib_InternalGetTcp6TableWithOwnerModule,@196")
#pragma comment(linker, "/EXPORT:InternalGetTcp6TableWithOwnerPid=_AheadLib_InternalGetTcp6TableWithOwnerPid,@197")
#pragma comment(linker, "/EXPORT:InternalGetTcpTable2=_AheadLib_InternalGetTcpTable2,@198")
#pragma comment(linker, "/EXPORT:InternalGetTcpTable=_AheadLib_InternalGetTcpTable,@199")
#pragma comment(linker, "/EXPORT:InternalGetTcpTableEx=_AheadLib_InternalGetTcpTableEx,@200")
#pragma comment(linker, "/EXPORT:InternalGetTcpTableWithOwnerModule=_AheadLib_InternalGetTcpTableWithOwnerModule,@201")
#pragma comment(linker, "/EXPORT:InternalGetTcpTableWithOwnerPid=_AheadLib_InternalGetTcpTableWithOwnerPid,@202")
#pragma comment(linker, "/EXPORT:InternalGetTunnelPhysicalAdapter=_AheadLib_InternalGetTunnelPhysicalAdapter,@203")
#pragma comment(linker, "/EXPORT:InternalGetUdp6TableWithOwnerModule=_AheadLib_InternalGetUdp6TableWithOwnerModule,@204")
#pragma comment(linker, "/EXPORT:InternalGetUdp6TableWithOwnerPid=_AheadLib_InternalGetUdp6TableWithOwnerPid,@205")
#pragma comment(linker, "/EXPORT:InternalGetUdpTable=_AheadLib_InternalGetUdpTable,@206")
#pragma comment(linker, "/EXPORT:InternalGetUdpTableEx=_AheadLib_InternalGetUdpTableEx,@207")
#pragma comment(linker, "/EXPORT:InternalGetUdpTableWithOwnerModule=_AheadLib_InternalGetUdpTableWithOwnerModule,@208")
#pragma comment(linker, "/EXPORT:InternalGetUdpTableWithOwnerPid=_AheadLib_InternalGetUdpTableWithOwnerPid,@209")
#pragma comment(linker, "/EXPORT:InternalGetUnicastIpAddressEntry=_AheadLib_InternalGetUnicastIpAddressEntry,@210")
#pragma comment(linker, "/EXPORT:InternalGetUnicastIpAddressTable=_AheadLib_InternalGetUnicastIpAddressTable,@211")
#pragma comment(linker, "/EXPORT:InternalIcmpCreateFileEx=_AheadLib_InternalIcmpCreateFileEx,@212")
#pragma comment(linker, "/EXPORT:InternalSetIfEntry=_AheadLib_InternalSetIfEntry,@213")
#pragma comment(linker, "/EXPORT:InternalSetIpForwardEntry2=_AheadLib_InternalSetIpForwardEntry2,@214")
#pragma comment(linker, "/EXPORT:InternalSetIpForwardEntry=_AheadLib_InternalSetIpForwardEntry,@215")
#pragma comment(linker, "/EXPORT:InternalSetIpInterfaceEntry=_AheadLib_InternalSetIpInterfaceEntry,@216")
#pragma comment(linker, "/EXPORT:InternalSetIpNetEntry2=_AheadLib_InternalSetIpNetEntry2,@217")
#pragma comment(linker, "/EXPORT:InternalSetIpNetEntry=_AheadLib_InternalSetIpNetEntry,@218")
#pragma comment(linker, "/EXPORT:InternalSetIpStats=_AheadLib_InternalSetIpStats,@219")
#pragma comment(linker, "/EXPORT:InternalSetTcpEntry=_AheadLib_InternalSetTcpEntry,@220")
#pragma comment(linker, "/EXPORT:InternalSetTeredoPort=_AheadLib_InternalSetTeredoPort,@221")
#pragma comment(linker, "/EXPORT:InternalSetUnicastIpAddressEntry=_AheadLib_InternalSetUnicastIpAddressEntry,@222")
#pragma comment(linker, "/EXPORT:IpReleaseAddress=_AheadLib_IpReleaseAddress,@223")
#pragma comment(linker, "/EXPORT:IpRenewAddress=_AheadLib_IpRenewAddress,@224")
#pragma comment(linker, "/EXPORT:LookupPersistentTcpPortReservation=_AheadLib_LookupPersistentTcpPortReservation,@225")
#pragma comment(linker, "/EXPORT:LookupPersistentUdpPortReservation=_AheadLib_LookupPersistentUdpPortReservation,@226")
#pragma comment(linker, "/EXPORT:NTPTimeToNTFileTime=_AheadLib_NTPTimeToNTFileTime,@227")
#pragma comment(linker, "/EXPORT:NTTimeToNTPTime=_AheadLib_NTTimeToNTPTime,@228")
#pragma comment(linker, "/EXPORT:NhGetGuidFromInterfaceName=_AheadLib_NhGetGuidFromInterfaceName,@229")
#pragma comment(linker, "/EXPORT:NhGetInterfaceDescriptionFromGuid=_AheadLib_NhGetInterfaceDescriptionFromGuid,@230")
#pragma comment(linker, "/EXPORT:NhGetInterfaceNameFromDeviceGuid=_AheadLib_NhGetInterfaceNameFromDeviceGuid,@231")
#pragma comment(linker, "/EXPORT:NhGetInterfaceNameFromGuid=_AheadLib_NhGetInterfaceNameFromGuid,@232")
#pragma comment(linker, "/EXPORT:NhpAllocateAndGetInterfaceInfoFromStack=_AheadLib_NhpAllocateAndGetInterfaceInfoFromStack,@233")
#pragma comment(linker, "/EXPORT:NotifyAddrChange=_AheadLib_NotifyAddrChange,@234")
#pragma comment(linker, "/EXPORT:NotifyCompartmentChange=_AheadLib_NotifyCompartmentChange,@235")
#pragma comment(linker, "/EXPORT:NotifyIfTimestampConfigChange=_AheadLib_NotifyIfTimestampConfigChange,@236")
#pragma comment(linker, "/EXPORT:NotifyIpInterfaceChange=_AheadLib_NotifyIpInterfaceChange,@237")
#pragma comment(linker, "/EXPORT:NotifyRouteChange2=_AheadLib_NotifyRouteChange2,@238")
#pragma comment(linker, "/EXPORT:NotifyRouteChange=_AheadLib_NotifyRouteChange,@239")
#pragma comment(linker, "/EXPORT:NotifyStableUnicastIpAddressTable=_AheadLib_NotifyStableUnicastIpAddressTable,@240")
#pragma comment(linker, "/EXPORT:NotifyTeredoPortChange=_AheadLib_NotifyTeredoPortChange,@241")
#pragma comment(linker, "/EXPORT:NotifyUnicastIpAddressChange=_AheadLib_NotifyUnicastIpAddressChange,@242")
#pragma comment(linker, "/EXPORT:OpenCompartment=_AheadLib_OpenCompartment,@243")
#pragma comment(linker, "/EXPORT:ParseNetworkString=_AheadLib_ParseNetworkString,@244")
#pragma comment(linker, "/EXPORT:ResolveIpNetEntry2=_AheadLib_ResolveIpNetEntry2,@261")
#pragma comment(linker, "/EXPORT:ResolveNeighbor=_AheadLib_ResolveNeighbor,@262")
#pragma comment(linker, "/EXPORT:RestoreMediaSense=_AheadLib_RestoreMediaSense,@263")
#pragma comment(linker, "/EXPORT:SendARP=_AheadLib_SendARP,@264")
#pragma comment(linker, "/EXPORT:SetAdapterIpAddress=_AheadLib_SetAdapterIpAddress,@265")
#pragma comment(linker, "/EXPORT:SetCurrentThreadCompartmentId=_AheadLib_SetCurrentThreadCompartmentId,@266")
#pragma comment(linker, "/EXPORT:SetCurrentThreadCompartmentScope=_AheadLib_SetCurrentThreadCompartmentScope,@267")
#pragma comment(linker, "/EXPORT:SetDnsSettings=_AheadLib_SetDnsSettings,@268")
#pragma comment(linker, "/EXPORT:SetIfEntry=_AheadLib_SetIfEntry,@269")
#pragma comment(linker, "/EXPORT:SetInterfaceDnsSettings=_AheadLib_SetInterfaceDnsSettings,@270")
#pragma comment(linker, "/EXPORT:SetIpForwardEntry2=_AheadLib_SetIpForwardEntry2,@271")
#pragma comment(linker, "/EXPORT:SetIpForwardEntry=_AheadLib_SetIpForwardEntry,@272")
#pragma comment(linker, "/EXPORT:SetIpInterfaceEntry=_AheadLib_SetIpInterfaceEntry,@273")
#pragma comment(linker, "/EXPORT:SetIpNetEntry2=_AheadLib_SetIpNetEntry2,@274")
#pragma comment(linker, "/EXPORT:SetIpNetEntry=_AheadLib_SetIpNetEntry,@275")
#pragma comment(linker, "/EXPORT:SetIpStatistics=_AheadLib_SetIpStatistics,@276")
#pragma comment(linker, "/EXPORT:SetIpStatisticsEx=_AheadLib_SetIpStatisticsEx,@277")
#pragma comment(linker, "/EXPORT:SetIpTTL=_AheadLib_SetIpTTL,@278")
#pragma comment(linker, "/EXPORT:SetJobCompartmentId=_AheadLib_SetJobCompartmentId,@279")
#pragma comment(linker, "/EXPORT:SetNetworkInformation=_AheadLib_SetNetworkInformation,@280")
#pragma comment(linker, "/EXPORT:SetPerTcp6ConnectionEStats=_AheadLib_SetPerTcp6ConnectionEStats,@281")
#pragma comment(linker, "/EXPORT:SetPerTcp6ConnectionStats=_AheadLib_SetPerTcp6ConnectionStats,@282")
#pragma comment(linker, "/EXPORT:SetPerTcpConnectionEStats=_AheadLib_SetPerTcpConnectionEStats,@283")
#pragma comment(linker, "/EXPORT:SetPerTcpConnectionStats=_AheadLib_SetPerTcpConnectionStats,@284")
#pragma comment(linker, "/EXPORT:SetSessionCompartmentId=_AheadLib_SetSessionCompartmentId,@285")
#pragma comment(linker, "/EXPORT:SetTcpEntry=_AheadLib_SetTcpEntry,@286")
#pragma comment(linker, "/EXPORT:SetUnicastIpAddressEntry=_AheadLib_SetUnicastIpAddressEntry,@287")
#pragma comment(linker, "/EXPORT:UnenableRouter=_AheadLib_UnenableRouter,@288")
#pragma comment(linker, "/EXPORT:do_echo_rep=_AheadLib_do_echo_rep,@289")
#pragma comment(linker, "/EXPORT:do_echo_req=_AheadLib_do_echo_req,@290")
#pragma comment(linker, "/EXPORT:if_indextoname=_AheadLib_if_indextoname,@291")
#pragma comment(linker, "/EXPORT:if_nametoindex=_AheadLib_if_nametoindex,@292")
#pragma comment(linker, "/EXPORT:register_icmp=_AheadLib_register_icmp,@293")
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 宏定义
#define EXTERNC extern "C"
#define NAKED __declspec(naked)
#define EXPORT __declspec(dllexport)

#define ALCPP EXPORT NAKED
#define ALSTD EXTERNC EXPORT NAKED void __stdcall
#define ALCFAST EXTERNC EXPORT NAKED void __fastcall
#define ALCDECL EXTERNC NAKED void __cdecl
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AheadLib 命名空间
namespace AheadLib
{
	HMODULE m_hModule = NULL;	// 原始模块句柄
	DWORD m_dwReturn[293] = {0};	// 原始函数返回地址


	// 加载原始模块
	inline BOOL WINAPI Load()
	{
		TCHAR tzPath[MAX_PATH];
		TCHAR tzTemp[MAX_PATH * 2];

		GetSystemDirectory(tzPath, MAX_PATH);
		lstrcat(tzPath, TEXT("\\IPHLPAPI"));
		m_hModule = LoadLibrary(tzPath);
		if (m_hModule == NULL)
		{
			wsprintf(tzTemp, TEXT("无法加载 %s，程序无法正常运行。"), tzPath);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_ICONSTOP);
		}

		return (m_hModule != NULL);	
	}
		
	// 释放原始模块
	inline VOID WINAPI Free()
	{
		if (m_hModule)
		{
			FreeLibrary(m_hModule);
		}
	}

	// 获取原始函数地址
	FARPROC WINAPI GetAddress(PCSTR pszProcName)
	{
		FARPROC fpAddress;
		CHAR szProcName[16];
		TCHAR tzTemp[MAX_PATH];

		fpAddress = GetProcAddress(m_hModule, pszProcName);
		if (fpAddress == NULL)
		{
			wsprintf(tzTemp, TEXT("无法找到函数 %hs，程序无法正常运行。"), pszProcName);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_ICONSTOP);
			ExitProcess(-2);
		}

		return fpAddress;
	}
}
using namespace AheadLib;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 入口函数
BOOL WINAPI DllMain(HMODULE hModule, DWORD dwReason, PVOID pvReserved)
{
	if (dwReason == DLL_PROCESS_ATTACH)
	{
		DisableThreadLibraryCalls(hModule);
		hook();
		return Load();
	}
	else if (dwReason == DLL_PROCESS_DETACH)
	{
		Free();
	}

	return TRUE;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_AddIPAddress(void)
{
	GetAddress("AddIPAddress");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_AllocateAndGetInterfaceInfoFromStack(void)
{
	GetAddress("AllocateAndGetInterfaceInfoFromStack");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_AllocateAndGetIpAddrTableFromStack(void)
{
	GetAddress("AllocateAndGetIpAddrTableFromStack");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CancelIPChangeNotify(void)
{
	GetAddress("CancelIPChangeNotify");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CancelIfTimestampConfigChange(void)
{
	GetAddress("CancelIfTimestampConfigChange");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CancelMibChangeNotify2(void)
{
	GetAddress("CancelMibChangeNotify2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CaptureInterfaceHardwareCrossTimestamp(void)
{
	GetAddress("CaptureInterfaceHardwareCrossTimestamp");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CloseCompartment(void)
{
	GetAddress("CloseCompartment");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CloseGetIPPhysicalInterfaceForDestination(void)
{
	GetAddress("CloseGetIPPhysicalInterfaceForDestination");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertCompartmentGuidToId(void)
{
	GetAddress("ConvertCompartmentGuidToId");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertCompartmentIdToGuid(void)
{
	GetAddress("ConvertCompartmentIdToGuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertGuidToStringA(void)
{
	GetAddress("ConvertGuidToStringA");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertGuidToStringW(void)
{
	GetAddress("ConvertGuidToStringW");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfaceAliasToLuid(void)
{
	GetAddress("ConvertInterfaceAliasToLuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfaceGuidToLuid(void)
{
	GetAddress("ConvertInterfaceGuidToLuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfaceIndexToLuid(void)
{
	GetAddress("ConvertInterfaceIndexToLuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfaceLuidToAlias(void)
{
	GetAddress("ConvertInterfaceLuidToAlias");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfaceLuidToGuid(void)
{
	GetAddress("ConvertInterfaceLuidToGuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfaceLuidToIndex(void)
{
	GetAddress("ConvertInterfaceLuidToIndex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfaceLuidToNameA(void)
{
	GetAddress("ConvertInterfaceLuidToNameA");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfaceLuidToNameW(void)
{
	GetAddress("ConvertInterfaceLuidToNameW");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfaceNameToLuidA(void)
{
	GetAddress("ConvertInterfaceNameToLuidA");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfaceNameToLuidW(void)
{
	GetAddress("ConvertInterfaceNameToLuidW");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertInterfacePhysicalAddressToLuid(void)
{
	GetAddress("ConvertInterfacePhysicalAddressToLuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertIpv4MaskToLength(void)
{
	GetAddress("ConvertIpv4MaskToLength");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertLengthToIpv4Mask(void)
{
	GetAddress("ConvertLengthToIpv4Mask");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertRemoteInterfaceAliasToLuid(void)
{
	GetAddress("ConvertRemoteInterfaceAliasToLuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertRemoteInterfaceGuidToLuid(void)
{
	GetAddress("ConvertRemoteInterfaceGuidToLuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertRemoteInterfaceIndexToLuid(void)
{
	GetAddress("ConvertRemoteInterfaceIndexToLuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertRemoteInterfaceLuidToAlias(void)
{
	GetAddress("ConvertRemoteInterfaceLuidToAlias");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertRemoteInterfaceLuidToGuid(void)
{
	GetAddress("ConvertRemoteInterfaceLuidToGuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertRemoteInterfaceLuidToIndex(void)
{
	GetAddress("ConvertRemoteInterfaceLuidToIndex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertStringToGuidA(void)
{
	GetAddress("ConvertStringToGuidA");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertStringToGuidW(void)
{
	GetAddress("ConvertStringToGuidW");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ConvertStringToInterfacePhysicalAddress(void)
{
	GetAddress("ConvertStringToInterfacePhysicalAddress");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreateAnycastIpAddressEntry(void)
{
	GetAddress("CreateAnycastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreateCompartment(void)
{
	GetAddress("CreateCompartment");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreateIpForwardEntry2(void)
{
	GetAddress("CreateIpForwardEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreateIpForwardEntry(void)
{
	GetAddress("CreateIpForwardEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreateIpNetEntry2(void)
{
	GetAddress("CreateIpNetEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreateIpNetEntry(void)
{
	GetAddress("CreateIpNetEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreatePersistentTcpPortReservation(void)
{
	GetAddress("CreatePersistentTcpPortReservation");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreatePersistentUdpPortReservation(void)
{
	GetAddress("CreatePersistentUdpPortReservation");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreateProxyArpEntry(void)
{
	GetAddress("CreateProxyArpEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreateSortedAddressPairs(void)
{
	GetAddress("CreateSortedAddressPairs");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_CreateUnicastIpAddressEntry(void)
{
	GetAddress("CreateUnicastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeleteAnycastIpAddressEntry(void)
{
	GetAddress("DeleteAnycastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeleteCompartment(void)
{
	GetAddress("DeleteCompartment");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeleteIPAddress(void)
{
	GetAddress("DeleteIPAddress");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeleteIpForwardEntry2(void)
{
	GetAddress("DeleteIpForwardEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeleteIpForwardEntry(void)
{
	GetAddress("DeleteIpForwardEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeleteIpNetEntry2(void)
{
	GetAddress("DeleteIpNetEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeleteIpNetEntry(void)
{
	GetAddress("DeleteIpNetEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeletePersistentTcpPortReservation(void)
{
	GetAddress("DeletePersistentTcpPortReservation");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeletePersistentUdpPortReservation(void)
{
	GetAddress("DeletePersistentUdpPortReservation");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeleteProxyArpEntry(void)
{
	GetAddress("DeleteProxyArpEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DeleteUnicastIpAddressEntry(void)
{
	GetAddress("DeleteUnicastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_DisableMediaSense(void)
{
	GetAddress("DisableMediaSense");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_EnableRouter(void)
{
	GetAddress("EnableRouter");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FlushIpNetTable2(void)
{
	GetAddress("FlushIpNetTable2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FlushIpNetTable(void)
{
	GetAddress("FlushIpNetTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FlushIpPathTable(void)
{
	GetAddress("FlushIpPathTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FreeDnsSettings(void)
{
	GetAddress("FreeDnsSettings");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FreeInterfaceDnsSettings(void)
{
	GetAddress("FreeInterfaceDnsSettings");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_FreeMibTable(void)
{
	GetAddress("FreeMibTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetAdapterIndex(void)
{
	GetAddress("GetAdapterIndex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetAdapterOrderMap(void)
{
	GetAddress("GetAdapterOrderMap");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetAdaptersAddresses(void)
{
	GetAddress("GetAdaptersAddresses");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetAdaptersInfo(void)
{
	GetAddress("GetAdaptersInfo");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetAnycastIpAddressEntry(void)
{
	GetAddress("GetAnycastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetAnycastIpAddressTable(void)
{
	GetAddress("GetAnycastIpAddressTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetBestInterface(void)
{
	GetAddress("GetBestInterface");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetBestInterfaceEx(void)
{
	GetAddress("GetBestInterfaceEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetBestRoute2(void)
{
	GetAddress("GetBestRoute2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetBestRoute(void)
{
	GetAddress("GetBestRoute");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetCurrentThreadCompartmentId(void)
{
	GetAddress("GetCurrentThreadCompartmentId");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetCurrentThreadCompartmentScope(void)
{
	GetAddress("GetCurrentThreadCompartmentScope");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetDefaultCompartmentId(void)
{
	GetAddress("GetDefaultCompartmentId");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetDnsSettings(void)
{
	GetAddress("GetDnsSettings");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetExtendedTcpTable(void)
{
	GetAddress("GetExtendedTcpTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetExtendedUdpTable(void)
{
	GetAddress("GetExtendedUdpTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetFriendlyIfIndex(void)
{
	GetAddress("GetFriendlyIfIndex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIcmpStatistics(void)
{
	GetAddress("GetIcmpStatistics");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIcmpStatisticsEx(void)
{
	GetAddress("GetIcmpStatisticsEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIfEntry2(void)
{
	GetAddress("GetIfEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIfEntry2Ex(void)
{
	GetAddress("GetIfEntry2Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIfEntry(void)
{
	GetAddress("GetIfEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIfStackTable(void)
{
	GetAddress("GetIfStackTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIfTable2(void)
{
	GetAddress("GetIfTable2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIfTable2Ex(void)
{
	GetAddress("GetIfTable2Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIfTable(void)
{
	GetAddress("GetIfTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetInterfaceCompartmentId(void)
{
	GetAddress("GetInterfaceCompartmentId");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetInterfaceCurrentTimestampCapabilities(void)
{
	GetAddress("GetInterfaceCurrentTimestampCapabilities");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetInterfaceDnsSettings(void)
{
	GetAddress("GetInterfaceDnsSettings");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetInterfaceHardwareTimestampCapabilities(void)
{
	GetAddress("GetInterfaceHardwareTimestampCapabilities");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetInterfaceInfo(void)
{
	GetAddress("GetInterfaceInfo");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetInvertedIfStackTable(void)
{
	GetAddress("GetInvertedIfStackTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpAddrTable(void)
{
	GetAddress("GetIpAddrTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpErrorString(void)
{
	GetAddress("GetIpErrorString");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpForwardEntry2(void)
{
	GetAddress("GetIpForwardEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpForwardTable2(void)
{
	GetAddress("GetIpForwardTable2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpForwardTable(void)
{
	GetAddress("GetIpForwardTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpInterfaceEntry(void)
{
	GetAddress("GetIpInterfaceEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpInterfaceTable(void)
{
	GetAddress("GetIpInterfaceTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpNetEntry2(void)
{
	GetAddress("GetIpNetEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpNetTable2(void)
{
	GetAddress("GetIpNetTable2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpNetTable(void)
{
	GetAddress("GetIpNetTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpNetworkConnectionBandwidthEstimates(void)
{
	GetAddress("GetIpNetworkConnectionBandwidthEstimates");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpPathEntry(void)
{
	GetAddress("GetIpPathEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpPathTable(void)
{
	GetAddress("GetIpPathTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpStatistics(void)
{
	GetAddress("GetIpStatistics");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetIpStatisticsEx(void)
{
	GetAddress("GetIpStatisticsEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetJobCompartmentId(void)
{
	GetAddress("GetJobCompartmentId");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetMulticastIpAddressEntry(void)
{
	GetAddress("GetMulticastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetMulticastIpAddressTable(void)
{
	GetAddress("GetMulticastIpAddressTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetNetworkInformation(void)
{
	GetAddress("GetNetworkInformation");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetNetworkParams(void)
{
	GetAddress("GetNetworkParams");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetNumberOfInterfaces(void)
{
	GetAddress("GetNumberOfInterfaces");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetOwnerModuleFromPidAndInfo(void)
{
	GetAddress("GetOwnerModuleFromPidAndInfo");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetOwnerModuleFromTcp6Entry(void)
{
	GetAddress("GetOwnerModuleFromTcp6Entry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetOwnerModuleFromTcpEntry(void)
{
	GetAddress("GetOwnerModuleFromTcpEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetOwnerModuleFromUdp6Entry(void)
{
	GetAddress("GetOwnerModuleFromUdp6Entry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetOwnerModuleFromUdpEntry(void)
{
	GetAddress("GetOwnerModuleFromUdpEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetPerAdapterInfo(void)
{
	GetAddress("GetPerAdapterInfo");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetPerTcp6ConnectionEStats(void)
{
	GetAddress("GetPerTcp6ConnectionEStats");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetPerTcp6ConnectionStats(void)
{
	GetAddress("GetPerTcp6ConnectionStats");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetPerTcpConnectionEStats(void)
{
	GetAddress("GetPerTcpConnectionEStats");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetPerTcpConnectionStats(void)
{
	GetAddress("GetPerTcpConnectionStats");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetRTTAndHopCount(void)
{
	GetAddress("GetRTTAndHopCount");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetSessionCompartmentId(void)
{
	GetAddress("GetSessionCompartmentId");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetTcp6Table2(void)
{
	GetAddress("GetTcp6Table2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetTcp6Table(void)
{
	GetAddress("GetTcp6Table");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetTcpStatistics(void)
{
	GetAddress("GetTcpStatistics");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetTcpStatisticsEx2(void)
{
	GetAddress("GetTcpStatisticsEx2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetTcpStatisticsEx(void)
{
	GetAddress("GetTcpStatisticsEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetTcpTable2(void)
{
	GetAddress("GetTcpTable2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetTcpTable(void)
{
	GetAddress("GetTcpTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetTeredoPort(void)
{
	GetAddress("GetTeredoPort");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetUdp6Table(void)
{
	GetAddress("GetUdp6Table");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetUdpStatistics(void)
{
	GetAddress("GetUdpStatistics");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetUdpStatisticsEx2(void)
{
	GetAddress("GetUdpStatisticsEx2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetUdpStatisticsEx(void)
{
	GetAddress("GetUdpStatisticsEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetUdpTable(void)
{
	GetAddress("GetUdpTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetUniDirectionalAdapterInfo(void)
{
	GetAddress("GetUniDirectionalAdapterInfo");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetUnicastIpAddressEntry(void)
{
	GetAddress("GetUnicastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetUnicastIpAddressTable(void)
{
	GetAddress("GetUnicastIpAddressTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_GetWPAOACSupportLevel(void)
{
	GetAddress("GetWPAOACSupportLevel");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Icmp6CreateFile(void)
{
	GetAddress("Icmp6CreateFile");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Icmp6ParseReplies(void)
{
	GetAddress("Icmp6ParseReplies");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Icmp6SendEcho2(void)
{
	GetAddress("Icmp6SendEcho2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_IcmpCloseHandle(void)
{
	GetAddress("IcmpCloseHandle");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_IcmpCreateFile(void)
{
	GetAddress("IcmpCreateFile");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_IcmpParseReplies(void)
{
	GetAddress("IcmpParseReplies");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_IcmpSendEcho2(void)
{
	GetAddress("IcmpSendEcho2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_IcmpSendEcho2Ex(void)
{
	GetAddress("IcmpSendEcho2Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_IcmpSendEcho(void)
{
	GetAddress("IcmpSendEcho");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InitializeCompartmentEntry(void)
{
	GetAddress("InitializeCompartmentEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InitializeIpForwardEntry(void)
{
	GetAddress("InitializeIpForwardEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InitializeIpInterfaceEntry(void)
{
	GetAddress("InitializeIpInterfaceEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InitializeUnicastIpAddressEntry(void)
{
	GetAddress("InitializeUnicastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalCleanupPersistentStore(void)
{
	GetAddress("InternalCleanupPersistentStore");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalCreateAnycastIpAddressEntry(void)
{
	GetAddress("InternalCreateAnycastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalCreateIpForwardEntry2(void)
{
	GetAddress("InternalCreateIpForwardEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalCreateIpForwardEntry(void)
{
	GetAddress("InternalCreateIpForwardEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalCreateIpNetEntry2(void)
{
	GetAddress("InternalCreateIpNetEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalCreateIpNetEntry(void)
{
	GetAddress("InternalCreateIpNetEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalCreateUnicastIpAddressEntry(void)
{
	GetAddress("InternalCreateUnicastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalDeleteAnycastIpAddressEntry(void)
{
	GetAddress("InternalDeleteAnycastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalDeleteIpForwardEntry2(void)
{
	GetAddress("InternalDeleteIpForwardEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalDeleteIpForwardEntry(void)
{
	GetAddress("InternalDeleteIpForwardEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalDeleteIpNetEntry2(void)
{
	GetAddress("InternalDeleteIpNetEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalDeleteIpNetEntry(void)
{
	GetAddress("InternalDeleteIpNetEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalDeleteUnicastIpAddressEntry(void)
{
	GetAddress("InternalDeleteUnicastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalFindInterfaceByAddress(void)
{
	GetAddress("InternalFindInterfaceByAddress");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetAnycastIpAddressEntry(void)
{
	GetAddress("InternalGetAnycastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetAnycastIpAddressTable(void)
{
	GetAddress("InternalGetAnycastIpAddressTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetBoundTcp6EndpointTable(void)
{
	GetAddress("InternalGetBoundTcp6EndpointTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetBoundTcpEndpointTable(void)
{
	GetAddress("InternalGetBoundTcpEndpointTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetForwardIpTable2(void)
{
	GetAddress("InternalGetForwardIpTable2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIPPhysicalInterfaceForDestination(void)
{
	GetAddress("InternalGetIPPhysicalInterfaceForDestination");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIfEntry2(void)
{
	GetAddress("InternalGetIfEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIfTable2(void)
{
	GetAddress("InternalGetIfTable2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIfTable(void)
{
	GetAddress("InternalGetIfTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIpAddrTable(void)
{
	GetAddress("InternalGetIpAddrTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIpForwardEntry2(void)
{
	GetAddress("InternalGetIpForwardEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIpForwardTable(void)
{
	GetAddress("InternalGetIpForwardTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIpInterfaceEntry(void)
{
	GetAddress("InternalGetIpInterfaceEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIpInterfaceTable(void)
{
	GetAddress("InternalGetIpInterfaceTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIpNetEntry2(void)
{
	GetAddress("InternalGetIpNetEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIpNetTable2(void)
{
	GetAddress("InternalGetIpNetTable2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetIpNetTable(void)
{
	GetAddress("InternalGetIpNetTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetMulticastIpAddressEntry(void)
{
	GetAddress("InternalGetMulticastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetMulticastIpAddressTable(void)
{
	GetAddress("InternalGetMulticastIpAddressTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetRtcSlotInformation(void)
{
	GetAddress("InternalGetRtcSlotInformation");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetTcp6Table2(void)
{
	GetAddress("InternalGetTcp6Table2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetTcp6TableWithOwnerModule(void)
{
	GetAddress("InternalGetTcp6TableWithOwnerModule");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetTcp6TableWithOwnerPid(void)
{
	GetAddress("InternalGetTcp6TableWithOwnerPid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetTcpTable2(void)
{
	GetAddress("InternalGetTcpTable2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetTcpTable(void)
{
	GetAddress("InternalGetTcpTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetTcpTableEx(void)
{
	GetAddress("InternalGetTcpTableEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetTcpTableWithOwnerModule(void)
{
	GetAddress("InternalGetTcpTableWithOwnerModule");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetTcpTableWithOwnerPid(void)
{
	GetAddress("InternalGetTcpTableWithOwnerPid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetTunnelPhysicalAdapter(void)
{
	GetAddress("InternalGetTunnelPhysicalAdapter");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetUdp6TableWithOwnerModule(void)
{
	GetAddress("InternalGetUdp6TableWithOwnerModule");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetUdp6TableWithOwnerPid(void)
{
	GetAddress("InternalGetUdp6TableWithOwnerPid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetUdpTable(void)
{
	GetAddress("InternalGetUdpTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetUdpTableEx(void)
{
	GetAddress("InternalGetUdpTableEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetUdpTableWithOwnerModule(void)
{
	GetAddress("InternalGetUdpTableWithOwnerModule");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetUdpTableWithOwnerPid(void)
{
	GetAddress("InternalGetUdpTableWithOwnerPid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetUnicastIpAddressEntry(void)
{
	GetAddress("InternalGetUnicastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalGetUnicastIpAddressTable(void)
{
	GetAddress("InternalGetUnicastIpAddressTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalIcmpCreateFileEx(void)
{
	GetAddress("InternalIcmpCreateFileEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalSetIfEntry(void)
{
	GetAddress("InternalSetIfEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalSetIpForwardEntry2(void)
{
	GetAddress("InternalSetIpForwardEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalSetIpForwardEntry(void)
{
	GetAddress("InternalSetIpForwardEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalSetIpInterfaceEntry(void)
{
	GetAddress("InternalSetIpInterfaceEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalSetIpNetEntry2(void)
{
	GetAddress("InternalSetIpNetEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalSetIpNetEntry(void)
{
	GetAddress("InternalSetIpNetEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalSetIpStats(void)
{
	GetAddress("InternalSetIpStats");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalSetTcpEntry(void)
{
	GetAddress("InternalSetTcpEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalSetTeredoPort(void)
{
	GetAddress("InternalSetTeredoPort");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_InternalSetUnicastIpAddressEntry(void)
{
	GetAddress("InternalSetUnicastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_IpReleaseAddress(void)
{
	GetAddress("IpReleaseAddress");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_IpRenewAddress(void)
{
	GetAddress("IpRenewAddress");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_LookupPersistentTcpPortReservation(void)
{
	GetAddress("LookupPersistentTcpPortReservation");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_LookupPersistentUdpPortReservation(void)
{
	GetAddress("LookupPersistentUdpPortReservation");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NTPTimeToNTFileTime(void)
{
	GetAddress("NTPTimeToNTFileTime");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NTTimeToNTPTime(void)
{
	GetAddress("NTTimeToNTPTime");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NhGetGuidFromInterfaceName(void)
{
	GetAddress("NhGetGuidFromInterfaceName");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NhGetInterfaceDescriptionFromGuid(void)
{
	GetAddress("NhGetInterfaceDescriptionFromGuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NhGetInterfaceNameFromDeviceGuid(void)
{
	GetAddress("NhGetInterfaceNameFromDeviceGuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NhGetInterfaceNameFromGuid(void)
{
	GetAddress("NhGetInterfaceNameFromGuid");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NhpAllocateAndGetInterfaceInfoFromStack(void)
{
	GetAddress("NhpAllocateAndGetInterfaceInfoFromStack");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NotifyAddrChange(void)
{
	GetAddress("NotifyAddrChange");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NotifyCompartmentChange(void)
{
	GetAddress("NotifyCompartmentChange");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NotifyIfTimestampConfigChange(void)
{
	GetAddress("NotifyIfTimestampConfigChange");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NotifyIpInterfaceChange(void)
{
	GetAddress("NotifyIpInterfaceChange");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NotifyRouteChange2(void)
{
	GetAddress("NotifyRouteChange2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NotifyRouteChange(void)
{
	GetAddress("NotifyRouteChange");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NotifyStableUnicastIpAddressTable(void)
{
	GetAddress("NotifyStableUnicastIpAddressTable");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NotifyTeredoPortChange(void)
{
	GetAddress("NotifyTeredoPortChange");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_NotifyUnicastIpAddressChange(void)
{
	GetAddress("NotifyUnicastIpAddressChange");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_OpenCompartment(void)
{
	GetAddress("OpenCompartment");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ParseNetworkString(void)
{
	GetAddress("ParseNetworkString");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfAddFiltersToInterface(long, long, long, long, long, long)
{
	GetAddress("_PfAddFiltersToInterface@24");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfAddGlobalFilterToInterface(long, long)
{
	GetAddress("_PfAddGlobalFilterToInterface@8");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfBindInterfaceToIPAddress(long, long, long)
{
	GetAddress("_PfBindInterfaceToIPAddress@12");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfBindInterfaceToIndex(long, long, long, long)
{
	GetAddress("_PfBindInterfaceToIndex@16");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfCreateInterface(long, long, long, long, long, long)
{
	GetAddress("_PfCreateInterface@24");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfDeleteInterface(long)
{
	GetAddress("_PfDeleteInterface@4");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfDeleteLog(void)
{
	GetAddress("_PfDeleteLog@0");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfGetInterfaceStatistics(long, long, long, long)
{
	GetAddress("_PfGetInterfaceStatistics@16");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfMakeLog(long)
{
	GetAddress("_PfMakeLog@4");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfRebindFilters(long, long)
{
	GetAddress("_PfRebindFilters@8");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfRemoveFilterHandles(long, long, long)
{
	GetAddress("_PfRemoveFilterHandles@12");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfRemoveFiltersFromInterface(long, long, long, long, long)
{
	GetAddress("_PfRemoveFiltersFromInterface@20");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfRemoveGlobalFilterFromInterface(long, long)
{
	GetAddress("_PfRemoveGlobalFilterFromInterface@8");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfSetLogBuffer(long, long, long, long, long, long, long)
{
	GetAddress("_PfSetLogBuffer@28");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfTestPacket(long, long, long, long, long)
{
	GetAddress("_PfTestPacket@20");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALSTD PfUnBindInterface(long)
{
	GetAddress("_PfUnBindInterface@4");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ResolveIpNetEntry2(void)
{
	GetAddress("ResolveIpNetEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_ResolveNeighbor(void)
{
	GetAddress("ResolveNeighbor");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_RestoreMediaSense(void)
{
	GetAddress("RestoreMediaSense");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SendARP(void)
{
	GetAddress("SendARP");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetAdapterIpAddress(void)
{
	GetAddress("SetAdapterIpAddress");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetCurrentThreadCompartmentId(void)
{
	GetAddress("SetCurrentThreadCompartmentId");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetCurrentThreadCompartmentScope(void)
{
	GetAddress("SetCurrentThreadCompartmentScope");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetDnsSettings(void)
{
	GetAddress("SetDnsSettings");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetIfEntry(void)
{
	GetAddress("SetIfEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetInterfaceDnsSettings(void)
{
	GetAddress("SetInterfaceDnsSettings");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetIpForwardEntry2(void)
{
	GetAddress("SetIpForwardEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetIpForwardEntry(void)
{
	GetAddress("SetIpForwardEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetIpInterfaceEntry(void)
{
	GetAddress("SetIpInterfaceEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetIpNetEntry2(void)
{
	GetAddress("SetIpNetEntry2");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetIpNetEntry(void)
{
	GetAddress("SetIpNetEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetIpStatistics(void)
{
	GetAddress("SetIpStatistics");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetIpStatisticsEx(void)
{
	GetAddress("SetIpStatisticsEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetIpTTL(void)
{
	GetAddress("SetIpTTL");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetJobCompartmentId(void)
{
	GetAddress("SetJobCompartmentId");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetNetworkInformation(void)
{
	GetAddress("SetNetworkInformation");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetPerTcp6ConnectionEStats(void)
{
	GetAddress("SetPerTcp6ConnectionEStats");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetPerTcp6ConnectionStats(void)
{
	GetAddress("SetPerTcp6ConnectionStats");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetPerTcpConnectionEStats(void)
{
	GetAddress("SetPerTcpConnectionEStats");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetPerTcpConnectionStats(void)
{
	GetAddress("SetPerTcpConnectionStats");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetSessionCompartmentId(void)
{
	GetAddress("SetSessionCompartmentId");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetTcpEntry(void)
{
	GetAddress("SetTcpEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_SetUnicastIpAddressEntry(void)
{
	GetAddress("SetUnicastIpAddressEntry");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_UnenableRouter(void)
{
	GetAddress("UnenableRouter");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_do_echo_rep(void)
{
	GetAddress("do_echo_rep");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_do_echo_req(void)
{
	GetAddress("do_echo_req");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_if_indextoname(void)
{
	GetAddress("if_indextoname");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_if_nametoindex(void)
{
	GetAddress("if_nametoindex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_register_icmp(void)
{
	GetAddress("register_icmp");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
